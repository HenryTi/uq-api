APP 首个测试 version='1.01' author='henry';

//http://do.thplay.cn/tonva/tv.bus
// 可以加注释的
/* 也可以这样注释 */
// 说明这个bus接口的使用
//schema1:{a1:string, a2:number, a3:date, a4:/test /*a4:aaa/test*/}
//complex1: {a1:string, c3:string, bbba37:string, arrName:[schema1]}

// #:数字，@:日期，其它是字符串
//schema2 [ a3, #cb2, @aa3]
//complex1 [ a1, c3, bbba37, [schema1]arrName]
//schema1[a1, #a2, @a3]

// 从center server 获得bus，busOwner=$$$, busName=test
BUS bus1  '$$$/test' -- 'http://do.thplay.cn/tonva/tv.bus'
    ACCEPT complex1 {
        book 账 at (a1, 1) set f1+=1, f2=1; -- where 1<>1;
        foreach arrName {
            book 账 at (a1, 1) set f1+=1, f2=a2;
        }
    };

TUID 商品 GLOBAL (
    id,
    base b1 id article,
    main name char(50),
    d2 dec,
    discription text,
    unique (name),
    search (name, discription),
);

TUID 商品inUnit (
    id,
    base b1 id article1,
    main name char(50),
    d2 dec,
    discription text,
    unique (name),
    search (name, discription),
);

-- TUID article 'a.com/article';

TUID article1 'a.com/article1';

ACCESS a1 (article, customer, order, order.批准订单, order.不批准, customerArticleHistory,
    命令, 命令1, 查询test, 商品流水Q, 账, 商品流水, 流水);
--ACCESS a1 (商品, 商品inUnit, customer, 命令, 命令1, 查询test, 商品流水Q, 账, 商品流水, 流水);
ACCESS a2 (商品, 单据, 单据.a.a1, 单据.b, 购物单, 购物单.确认, 购物单.备货);
-- ACCESS a2 (商品, 单据(a(a1), b), 购物单(确认, 备货)); 另外一种写法。也可以直接在对象上加access。哪种更好，还是两种都有？

BOOK 账 (
    key k1 id article,
    key k2 id 商品,
    f1 dec(12,2),
    f2 int,
    f3 tinyint,
);

HISTORY 流水 (
    date,
    key k1 id article,
    e1 int,
    e2 date,
    type,
    sheet s1,
    row s2,
    user,
    unit,
);

HISTORY 商品流水 (
    date,
    key 商品 id 商品,
    num dec(12,2),
    type,
    sheet,
    row,
    user,
    unit,
);

ACTION 命令1 (
    id1 id article,
    a2 char(50)
) {
    set id1 = 2;
};


ACTION 命令 (
    id1 id article,
    text1 char(80),
    Arr arr1 (
        t1 int,
        k char(50),
    ),
    Arr arr2 (
        k1 char(50),
    )
)
RETURNS a1 (t int, k char(50))
RETURNS a2 (k1 char(50))
RETURNS ret1 (a bigint, b text)
RETURNS ret2 (s1 bigint, s2 char(50), f1 int, f3 char(20), b bigint)
RETURNS ret3 (bb int, kk int, kk2 int)
RETURNS ret4 (e1 int)
RETURNS ret5 (a int, b int)
{
    var u id = user, un id=unit;

    foreach arr1 {
        into a1 select t1 as t, k as k;
        history 流水 of (id1) set e1=t1;

        bus bus1.complex1 set a1=1, c3=2, bbba37='a37';
        bus bus1.complex1 into arrName add a1=3, a2=2, a3=now();
        bus bus1.complex1 send; -- user=1 unit=3;
    }

    foreach arr2 {
        into a2 select k1 as k1;
    }

    into ret1 select id1 as a, text1 as b;

    into ret2 select a.s1, a.s2, b.f1, b.f3, user b
        from 流水 a join 账 b on a.k1=b.k1
        where a.e1>3;

    into ret3 select g1+sum(a.f1) as bb, g1 as kk, max(a.f2) as kk2
        from 账 a 
        where a.f1=3
        group by (a.f2) g1
        having g1>1
        order by g1 asc, sum(a.f1) desc;

    into ret3 select 1 as bb, 2 as kk, a.f2 as kk2
        from 账 a
        where a.f1=7
        order by a.f2 desc;

    var b int = id1;

    into ret4 select a.e1 from 流水 a;
    into ret5 select 1 as a, t.kk as b
        from (select a.d2 as bb, 1 as kk from 商品 a where a.discription=1) t
        where 1<>(select 3) and b>1;

    var c char(50) = 1+b+1;
    if 1=1*2 + 3 and 1<>(select 3) {
        var d int = 1;
    }
    else {
        var e bigint = 2;
    }
};

QUERY 查询Test (
    id1 id article,
    text1 char(80)
)
RETURNS ret1 (a int, b text)
PAGE (date datetime start now(), p1 int, p2 char(50))
{
    -- book 账 at (id1, id1) set f1+=b1, f2=b1; -- where 1<>1;
    into ret1 select a.e1 as a, 1 as b from 流水 a;
    page select a.[date], a.e1 as p1, 3 as p2 
        from 流水 a 
        where a.k1=5 and a.[date]<$pageStart
        order by a.date desc
        limit $pageSize;
};

QUERY 商品流水Q(
    商品 id 商品
)
PAGE (date datetime start now(), 商品 id 商品, num dec(12,2)) {
    page select a.[date], a.商品, a.num
        from 商品流水 a
        where a.商品=商品 and a.[date]<$pageStart
        order by a.date desc
        limit $pageSize;
};

SHEET 购物单(
    客户 id Customer,
    sumAmount dec(12,2),
    Arr a1 (
        article id 商品,
        price dec(12,2),
        quantity int,
        amount dec(12,2),
    )
)
Action 确认 {
    foreach a1 {
        history 商品流水 of (article) set num=amount;
    }
    bus bus1.complex1 set a1=1, c3=2, bbba37='a37';
    state to 备货;
}
State 备货 {
    Action 发货 {
        state to end; --
    }
};

SHEET 单据 (
    id1 id article,
    f1 dec(12,2),
    f2 dec(12,2),
    Arr arr1 (
        f11 char(50),
        f12 char(30),
    ),
)
Action s1 {
    state to a;
    -- state to delete; --
}
Action s2 {
    if (id1>0)
        state to b;
    else
        state to end;
}
State a 
{
    Action a1 
        RETURNS stateARet1 (c int, state char(30))
        RETURNS stateARet2 (dd datetime)
    {
        var a date;
        var b1 int = 1, article id;
        foreach arr1 {
            var c1 char(50) = concat('3', f11);
            book 账 at (id1, id1) set f1+=b1, f2=1; -- where 1<>1;
            history 流水 of (id1) set e1=b1+2, e2='2007-1-1';
            -- tuid 商品 at 3+5 set b1=2, name='xyz', d2=100, discription='good at';
            tuid 商品 into article id(3+5) unique('xyz') set b1=2, d2=100, discription='good at';
            tuid 商品inUnit into article unique('xyz') set b1=2, d2=100, discription='good at';
            tuid 商品inUnit into article id 3 set b1=2, d2=100, discription='good at';
            into stateARet2 select '2019-1-1' as dd;
        }
        into stateARet1 select 1 as c, $state as state;
    };
    Action a2 {
    };
}
State b;
